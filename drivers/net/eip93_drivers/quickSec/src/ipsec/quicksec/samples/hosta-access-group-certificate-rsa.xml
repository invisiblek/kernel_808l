<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE quicksec PUBLIC "quicksec:dtd" "quicksec.dtd">


<!-- Peer-to-peer setup with access groups using certificates. -->
<!-- Related: hostb-access-group-certificate-rsa.xml -->
<quicksec>
  <!-- to generate the CA and end entity certificates used in this
       sample, please execute '../../../apps/certutils/ssh-certmake
       cert_template.rsa' in the ipsec/quicksec/samples directory.
       This will generate the necessary files needed by this policy.
       This operation must be done only on one of the test hosts!
       Copy the generated rsa* files to locally and to remote IKE
       peers ipsec/quicksec/usermode directory. -->
  <params>
    <!-- local certificate and private key -->
    <externalkey type="software" init-info="key_files(rsauser1.crt, 
                                            rsauser1.prv"/>
    <!-- Authentication domain specifies IKE authentication
         parameters -->
    <auth-domain>
      <!-- Trusted CA -->
      <ca file="rsaca.ca"/>

      <!-- static CRL from a file-->
      <crl file="rsaca.crl"/>
    </auth-domain>

    <!-- Access groups that limit access based on the information
         extracted from the remote credentials (certificate).
         The pattern can be a regular expression for example 
         pattern="*@safenet-inc.com". -->
    <group name="trusted-user1">
      <constraint type="cert-subject" field="email"
                  pattern="rsauser2@safenet-inc.com"/>
    </group>

    <group name="trusted-user2">
      <constraint type="cert-issuer" field="dn"
                  pattern="*CN=Test RSA CA"/>
    </group>
  </params>
  <policy>

    <tunnel name="host-to-host">
      <!-- local identity sent to the remote IKE peer -->
      <identity id-type="email" id="rsauser1@safenet-inc.com"/>
    </tunnel>

    <rule from-tunnel="host-to-host">
      <src>ipv4(172.30.4.167)</src>
      <dst>ipv4(172.30.4.189)</dst>
      <access-group>trusted-user1</access-group>
      <access-group>trusted-user2</access-group>
    </rule>

    <!-- Pass rule, that handles all traffic not matching
         to traffic selectors on any higher precedence rules.
         Remove this rule if plain text traffic is forbidden. -->
    <rule>
      <src>ipv4(0.0.0.0/0)</src>
      <dst>ipv4(0.0.0.0/0)</dst>
    </rule>

  </policy>
</quicksec>
